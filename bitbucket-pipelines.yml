image: node:16
pipelines:
  branches:

    "{rev,development}":
      - step:
            name: Dev - Build and Test
            caches:
              - node
            script:
              - apt-get update && apt-get install -y awscli
              - curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
              - dpkg -i session-manager-plugin.deb 
              - aws ssm send-command     --document-name "AWS-RunShellScript"     --targets '[{"Key":"InstanceIds","Values":["i-0939ab6050c3572a6"]}]'     --parameters '{"commands":["#!/bin/bash","sudo -i","cd /home/ubuntu/kiko-backend/","git pull origin development","docker-compose up -d --build", "ls -a>>/home/ubuntu/logs.txt"]}'


    "{rev,staging}":
      - step:
            name: STAGE - Build and Test
            caches:
              - node
            script:
              - apt-get update && apt-get install -y awscli
              - curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
              - dpkg -i session-manager-plugin.deb 
              - aws ssm send-command     --document-name "AWS-RunShellScript"     --targets '[{"Key":"InstanceIds","Values":["i-037ee0df34b3beb3c"]}]'     --parameters '{"commands":["#!/bin/bash","sudo -i","cd /home/ubuntu/kiko-backend/","git pull origin staging","docker-compose up -d --build", "ls -a>>/home/ubuntu/logs.txt"]}'      

    production:
      - step:
          name: Build and Push Docker Image
          image: atlassian/pipelines-awscli
          script:
            - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
            - echo $IMAGE_REPO_NAME
            - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com 
            - docker build -t $IMAGE_REPO_NAME:$PROD_IMAGE_TAG .
            - docker tag $IMAGE_REPO_NAME:$PROD_IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$PROD_IMAGE_TAG
            - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$PROD_IMAGE_TAG
          services:
            - docker
      - step:
          name: Deployment to Production
          deployment: Production
          image: amazon/aws-cli
          script:
            - aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment --region $AWS_DEFAULT_REGION